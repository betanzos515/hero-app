{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","helpers/functionsHelpers.js","auth/PrivateRoutes.js","auth/PublicRoutes.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/ui/Nabvar.js","components/marvel/MarvelScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/AppRoute.js","HeroApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","console","log","type","payload","logged","init","JSON","parse","localStorage","getItem","PrivateRoutes","isAutenticated","Component","component","rest","setItem","location","pathname","props","to","PublicRoutes","propsTypes","PropTypes","bool","isRequired","func","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","replace","name","heroes","HeroCard","heroe","id","superhero","alter_ego","first_appearance","characters","style","width","src","alt","height","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","DcScreen","HeroScreen","heroeId","useParams","find","getHeroesById","length","push","goBack","Navbar","user","useHistory","activeClassName","exact","MarvelScreen","SearchScreen","useLocation","queryString","search","q","initialState","useState","value","setValue","target","useForm","searchText","handleInputChange","heroesFiltered","toLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","DashboardRoutes","path","AppRouter","HeroApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"0JAKaA,EAAcC,0B,OCLdC,EACH,eADGA,EAEF,gBCGEC,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAEjD,OADAC,QAAQC,IAAIH,GACJC,EAAOG,MACb,KAAKN,EACH,OAAO,2BACFG,EAAOI,SADZ,IAEEC,QAAQ,IAGZ,KAAKR,EACH,MAAO,CACLQ,QAAQ,GAGZ,QACE,OAAON,ICpBAO,EAAO,WAElB,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,CAAEL,QAAQ,I,8DCElDM,EAAgB,SAAC,GAIvB,IAHLC,EAGI,EAHJA,eACWC,EAEP,EAFJC,UACGC,EACC,iBAEJ,OADEN,aAAaO,QAAQ,WAAWD,EAAKE,SAASC,UAE9C,cAAC,IAAD,2BACMH,GADN,IAEED,UAAW,SAACK,GAAD,OACTP,EAAiB,cAACC,EAAD,eAAeM,IAAY,cAAC,IAAD,CAAUC,GAAG,gB,iDCTpDC,EAAe,SAAC,GAItB,IAHLT,EAGI,EAHJA,eACWC,EAEP,EAFJC,UACGC,EACC,iBACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEED,UAAW,SAACK,GAAD,OACPP,EAA6C,cAAC,IAAD,CAAUQ,GAAG,MAAxC,cAACP,EAAD,eAAeM,SAM3CE,EAAaC,WAAa,CACtBV,eAAiBW,IAAUC,KAAKC,WAChCX,UAAWS,IAAUG,KAAKD,YClBvB,IAAME,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAaC,qBAAWnC,GAAxBkC,SAqBR,OACE,sBAAKE,UAAU,iBAAf,UACE,8CAEA,uBAEA,wBAAQA,UAAU,kBAAkBC,QA1BpB,WAIlB,IAAMC,EAAWxB,aAAaC,QAAQ,aAAe,IAErDkB,EAAQM,QAAQD,GAWhBJ,EATe,CAEb1B,KAAMN,EACNO,QAAS,CACP+B,KAAM,YAcR,uBChCOC,EAAS,CAClB,CACI,GAAM,YACN,UAAY,SACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,uBACnB,WAAa,eAEjB,CACI,GAAM,cACN,UAAY,WACZ,UAAY,YACZ,UAAY,SACZ,iBAAmB,mBACnB,WAAa,UAEjB,CACI,GAAM,WACN,UAAY,QACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,kBACnB,WAAa,oDAEjB,CACI,GAAM,WACN,UAAY,gBACZ,UAAY,YACZ,UAAY,aACZ,iBAAmB,0BACnB,WAAa,6FAEjB,CACI,GAAM,WACN,UAAY,cACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,sBACnB,WAAa,gBAEjB,CACI,GAAM,YACN,UAAY,eACZ,UAAY,YACZ,UAAY,iBACZ,iBAAmB,qBACnB,WAAa,kBAEjB,CACI,GAAM,aACN,UAAY,oBACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,wBACnB,WAAa,qBAEjB,CACI,GAAM,WACN,UAAY,kBACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,uBACnB,WAAa,gBAEjB,CACI,GAAM,UACN,UAAY,cACZ,UAAY,YACZ,UAAY,aACZ,iBAAmB,wBACnB,WAAa,qCAEjB,CACI,GAAM,WACN,UAAY,eACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,mBACnB,WAAa,4BAEjB,CACI,GAAM,gBACN,UAAY,aACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,sBACnB,WAAa,gBAEjB,CACI,GAAM,iBACN,UAAY,kBACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,4BACnB,WAAa,gBAEjB,CACI,GAAM,cACN,UAAY,WACZ,UAAY,gBACZ,UAAY,aACZ,iBAAmB,wBACnB,WAAa,cAEjB,CACI,GAAM,cACN,UAAY,OACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,0BACnB,WAAa,gBAEjB,CACI,GAAM,cACN,UAAY,OACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,yBACnB,WAAa,gBAEjB,CACI,GAAM,mBACN,UAAY,YACZ,UAAY,gBACZ,UAAY,gBACZ,iBAAmB,2BACnB,WAAa,iBAEjB,CACI,GAAM,mBACN,UAAY,YACZ,UAAY,gBACZ,UAAY,0BACZ,iBAAmB,eACnB,WAAa,2BAEjB,CACI,GAAM,iBACN,UAAY,UACZ,UAAY,gBACZ,UAAY,yBACZ,iBAAmB,wBACnB,WAAa,0BAEjB,CACI,GAAM,iBACN,UAAY,UACZ,UAAY,gBACZ,UAAY,gBACZ,iBAAmB,WACnB,WAAa,iBAEjB,CACI,GAAM,gBACN,UAAY,gBACZ,UAAY,gBACZ,UAAY,cACZ,iBAAmB,yBACnB,WAAa,gBC5JRC,EAAW,SAACC,GACrB,IACIC,EAKAD,EALAC,GACAC,EAIAF,EAJAE,UACAC,EAGAH,EAHAG,UACAC,EAEAJ,EAFAI,iBACAC,EACAL,EADAK,WAEJ,OACE,qBAAKZ,UAAU,8CAA8Ca,MAAO,CAACC,MAAM,SAA3E,SAEE,sBAAKd,UAAU,wBAAf,UACE,qBAAKA,UAAU,cAAce,IAAG,8BAAyBP,EAAzB,QAAmCQ,IAAKP,EAAWI,MAAO,CAACI,OAAO,OAClG,oBAAIjB,UAAU,8BAAd,SAA6CS,IAC7C,mBAAGT,UAAU,wBAAb,SAAsCU,IACnCA,IAAcE,GAAe,mBAAGZ,UAAU,YAAb,SAA0BY,IAC1D,mBAAGZ,UAAU,YAAb,SACE,uBAAOA,UAAU,aAAjB,SAA+BW,MAEjC,cAAC,IAAD,CAAMX,UAAU,gCAAgCX,GAAE,kBAAamB,GAA/D,6BCjBGU,EAAW,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAEhBd,EAASe,mBAAQ,kBCLQ,SAACD,GAGhC,IAFwB,CAAC,YAAa,iBAEjBE,SAASF,GAC1B,MAAM,IAAIG,MAAJ,oBAAwBH,EAAxB,kBAGV,OAAOd,EAAOkB,QAAO,SAAAC,GAAI,OAAIA,EAAKL,YAAaA,KDFlBM,CAAqBN,KAAW,CAACA,IAC9D,OAEI,qBAAKnB,UAAU,4BAAf,SAEQK,EAAOqB,KAAI,SAAAnB,GAAK,OACZ,cAAC,EAAD,eAA6BA,GAAdA,EAAMC,UEX5BmB,EAAW,WACpB,OACI,gCACI,2CACA,uBACA,cAAC,EAAD,CAAUR,UAAW,kBCHpBS,EAAa,SAAC,GAAe,IAAd/B,EAAa,EAAbA,QAEjBgC,EAAWC,cAAXD,QAEDL,EAAOJ,mBAAQ,kBCNG,SAACZ,GACzB,OAAOH,EAAO0B,MAAK,SAAAP,GAAI,OAAIA,EAAKhB,KAAOA,KDKZwB,CAAcH,KAAS,CAACA,IAEnD,IAAIL,EAEA,OAAO,cAAC,IAAD,CAAUnC,GAAG,MAGxB,IAMImB,EAMAgB,EANAhB,GACAC,EAKAe,EALAf,UACAU,EAIAK,EAJAL,UACAT,EAGAc,EAHAd,UACAC,EAEAa,EAFAb,iBACAC,EACAY,EADAZ,WAEJ,OACI,sBAAKZ,UAAU,iDAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKe,IAAG,8BAAyBP,EAAzB,QAAmCQ,IAAKP,EAAWT,UAAU,oBAEzE,sBAAKA,UAAU,QAAf,UACI,6BAAKS,IACL,qBAAIT,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,UAAgC,4CAAmBU,KACnD,qBAAIV,UAAU,kBAAd,UAAgC,4CAAmBmB,KACnD,qBAAInB,UAAU,kBAAd,UAAgC,kDAAyBW,QAE7D,sBAAKX,UAAU,OAAf,UACI,4CACA,4BAAIY,IACJ,wBAAQZ,UAAU,0BAA0BC,QA5BxC,WAEfJ,EAAQoC,QAAS,EAAGpC,EAAQqC,KAAK,KAAOrC,EAAQsC,UA0BrC,gCEtCPC,EAAS,WACpB,MAGIrC,qBAAWnC,GAFLwC,EADV,EACEiC,KAAQjC,KACRN,EAFF,EAEEA,SAIID,EAAUyC,cAWhB,OACE,sBAAKtC,UAAU,8CAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeX,GAAG,IAAlC,0BAIA,qBAAKW,UAAU,kBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,cAAC,IAAD,CACEuC,gBAAgB,SAChBvC,UAAU,oBACVwC,OAAK,EACLnD,GAAG,UAJL,oBASA,cAAC,IAAD,CACEkD,gBAAgB,SAChBvC,UAAU,oBACVwC,OAAK,EACLnD,GAAG,MAJL,gBASA,cAAC,IAAD,CACEkD,gBAAgB,SAChBvC,UAAU,oBACVwC,OAAK,EACLnD,GAAG,UAJL,yBAWJ,qBAAKW,UAAU,wDAAf,SACE,qBAAIA,UAAU,qBAAd,UACE,sBAAMA,UAAU,8BAAhB,SAA+CI,IAE/C,wBACEJ,UAAU,gCACVC,QApDW,WAInBH,EAHe,CACb1B,KAAMN,IAGRI,QAAQC,IAAI0B,GACZA,EAAQM,QAAQ,WA4CV,6BC7DGsC,EAAe,WACxB,OACI,gCACI,+CACA,uBACA,cAAC,EAAD,CAAUtB,UAAW,sB,yBCApBuB,EAAe,SAAC,GAAe,IAAd7C,EAAa,EAAbA,QAGpBX,EAAWyD,cACjB,EAAeC,IAAYnE,MAAMS,EAAS2D,QAAnCC,SAAP,MAAS,GAAT,EAGA,ECbmB,WAAsB,IAArBC,EAAoB,uDAAL,GACnC,EAA2BC,mBAASD,GAApC,mBAAOE,EAAP,KAAeC,EAAf,KAWA,MAAO,CAACD,EANkB,SAAC,GAAY,IAAXE,EAAU,EAAVA,OACxBD,EAAS,2BACFD,GADC,kBAEHE,EAAO/C,KAAO+C,EAAOF,UANhB,WACVC,EAASH,KDSqBK,CAAQ,CACtCC,WAAWP,IADf,mBAAOG,EAAP,KAAaK,EAAb,KAIOD,EAAcJ,EAAdI,WAEDE,EAAkBnC,mBAAQ,kBEnBL,WAAgB,IAAdhB,EAAa,uDAAN,GACpC,MAAU,KAAPA,EAAkB,IACrBA,EAAOA,EAAKoD,cACLnD,EAAOkB,QAAO,SAAChB,GAAD,OAAUA,EAAME,UAAU+C,cAAcnC,SAASjB,OFgBhCqD,CAAgBX,KAAI,CAACA,IAO3D,OACI,qCACI,8CACA,uBACA,sBAAK9C,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,6CACA,uBACA,uBAAM0D,SAbD,SAACC,GAClBA,EAAEC,iBACF/D,EAAQqC,KAAR,aAAoBmB,KAWR,UACI,uBACIjF,KAAK,OACLyF,YAAY,iBACZ7D,UAAU,eACVI,KAAK,aACL6C,MAAOI,EACPS,aAAa,MACbC,SAAUT,IAElB,wBACIlF,KAAK,SACL4B,UAAU,sCAFd,8BAOJ,sBAAKA,UAAU,QAAf,UACI,yCACA,uBACM,KAAJ8C,GAAW,qBAAK9C,UAAU,mBAAf,2BAIP,KAAJ8C,GAAkC,IAAxBS,EAAetB,QAAe,sBAAKjC,UAAU,qBAAf,wCACV8C,KAEhC,qBAAK9C,UAAU,mBAAf,SAEIuD,EAAe7B,KAAI,SAAAF,GAAI,OACnB,cAAC,EAAD,eAEQA,GADCA,EAAKhB,mBG5D7BwD,EAAkB,SAAC,GAAe,IAAdnE,EAAa,EAAbA,QAC7B,OACI,qCACI,cAAC,EAAD,CAAQA,QAASA,IACjB,qBAAKG,UAAU,2BAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwC,OAAK,EAACyB,KAAK,UAAUlF,UAAW0D,IACvC,cAAC,IAAD,CAAOD,OAAK,EAACyB,KAAK,mBAAmBlF,UAAW6C,IAChD,cAAC,IAAD,CAAOY,OAAK,EAACyB,KAAK,MAAMlF,UAAW4C,IACnC,cAAC,IAAD,CAAOa,OAAK,EAACyB,KAAK,UAAUlF,UAAW2D,IAGvC,cAAC,IAAD,CAAUrD,GAAG,qBCXpB6E,EAAY,WACvB,IAAO7B,EAAQtC,qBAAWnC,GAAnByE,KACP,OACE,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,eAEI,cAAC,EAAD,CAAcG,OAAK,EAACyB,KAAK,SAASlF,UAAWa,EAAaf,eAAgBwD,EAAK/D,SAC/E,cAAC,EAAD,CAAe2F,KAAK,IAAIlF,UAAWiF,EAAiBnF,eAAgBwD,EAAK/D,iBCRxE6F,EAAU,WACrB,MAAyBC,qBAAWrG,EAAa,GAAIQ,GAArD,mBAAO8D,EAAP,KAAavC,EAAb,KAMA,OAJAuE,qBAAU,WACR3F,aAAaO,QAAQ,OAAQT,KAAK8F,UAAUjC,MAC3C,CAACA,IAIF,cADA,CACCzE,EAAY2G,SAAb,CAAsBtB,MAAO,CAAEZ,OAAMvC,YAArC,UACE,cAAC,EAAD,IADF,QCbJ0E,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5278dff2.chunk.js","sourcesContent":["/* \n    Modulo que nos crea el contexto con el que vamos a trabajar\n*/\nimport { createContext } from \"react\";\n\nexport const AuthContext = createContext()","export const types = {\n    login:'[auth] login',\n    logout:'[auth] logout'\n}","/* \n    Modulo que manejara las acciones del reducer.\n*/\nimport { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n  console.log(state);\n  switch (action.type) {\n    case types.login:\n      return {\n        ...action.payload,\n        logged: true,\n      };\n\n    case types.logout:\n      return {\n        logged: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","export const init = () => {\n  //<- Funcion que nos sirve para iniciar el state del reducer\n  return JSON.parse(localStorage.getItem(\"user\")) || { logged: false };\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PrivateRoutes = ({\n  isAutenticated,\n  component: Component,\n  ...rest\n}) => {\n    localStorage.setItem('lastPath',rest.location.pathname);\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAutenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    ></Route>\n  );\n};\n\nPrivateRoutes.propTypes = {\n  isAutenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from \"react-router-dom\";\n\n//el componente recibe una serie de parametros para su correcto funcionamiento. en este componente hacemos uso de la renderización condicional en caso de que el usuario este logeado o no.\nexport const PublicRoutes = ({\n  isAutenticated,\n  component: Component,\n  ...rest //rest es el resto de los parametros que se nos envien a travez de las props\n}) => {\n  return (\n    <Route /* declaramos una ruta la cual recibe el resto de parametros y el componente a renderizar es evaludao si el usuario está autenticado o no */\n      {...rest}\n      component={(props) =>\n        (!isAutenticated) ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    ></Route>\n  );\n};\n\nPublicRoutes.propsTypes = {\n    isAutenticated : PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired    \n}\n","import React, { useContext } from \"react\";\nimport { AuthContext } from \"../../auth/AuthContext\";\nimport { types } from \"../../types/types\";\n\nexport const LoginScreen = ({ history }) => {\n  const { dispatch } = useContext(AuthContext);\n  const handleClick = () => {\n    // history.push('/'); //push guarda un historial de las rutas\n    // history.replace('/'); //replace remplaza la ruta actual por lo tanto no se guarda un historial de las rutas visitadas.\n    \n    const lastPath = localStorage.getItem('lastPath') || '/';\n\n    history.replace(lastPath); /* Remplaza la ruta actual por la que se le pase como parametro evitando que esta se guarde en el historial, la pagina principal en este caso la pagina principal es la de marven */\n\n    const action = {\n      /* Aqui simulamos una autenticación */\n      type: types.login,\n      payload: {\n        name: \"David\",\n      },\n    };\n\n    //enviamos esa accion al dispatch\n    dispatch(action);\n\n  };\n  return (\n    <div className=\"container mt-5\">\n      <h1>Login Screen</h1>\n\n      <hr />\n\n      <button className=\"btn btn-primary\" onClick={handleClick}>\n        Click\n      </button>\n    </div>\n  );\n};\n","export const heroes = [\n    {\n        'id': 'dc-batman',\n        'superhero':'Batman', \n        'publisher':'DC Comics', \n        'alter_ego':'Bruce Wayne',\n        'first_appearance':'Detective Comics #27',\n        'characters':'Bruce Wayne'\n    },\n    {\n        'id': 'dc-superman',\n        'superhero':'Superman', \n        'publisher':'DC Comics', \n        'alter_ego':'Kal-El',\n        'first_appearance':'Action Comics #1',\n        'characters':'Kal-El'\n    },\n    {\n        'id': 'dc-flash',\n        'superhero':'Flash', \n        'publisher':'DC Comics', \n        'alter_ego':'Jay Garrick',\n        'first_appearance':'Flash Comics #1',\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\n    },\n    {\n        'id': 'dc-green',\n        'superhero':'Green Lantern', \n        'publisher':'DC Comics', \n        'alter_ego':'Alan Scott',\n        'first_appearance':'All-American Comics #16',\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\n    },\n    {\n        'id': 'dc-arrow',\n        'superhero':'Green Arrow', \n        'publisher':'DC Comics', \n        'alter_ego':'Oliver Queen',\n        'first_appearance':'More Fun Comics #73',\n        'characters':'Oliver Queen'\n    },\n    {\n        'id': 'dc-wonder',\n        'superhero':'Wonder Woman', \n        'publisher':'DC Comics', \n        'alter_ego':'Princess Diana',\n        'first_appearance':'All Star Comics #8',\n        'characters':'Princess Diana'\n    },\n    {\n        'id': 'dc-martian',\n        'superhero':'Martian Manhunter', \n        'publisher':'DC Comics', \n        'alter_ego':'J\\'onn J\\'onzz',\n        'first_appearance':'Detective Comics #225',\n        'characters':'Martian Manhunter'\n    },\n    {\n        'id': 'dc-robin',\n        'superhero':'Robin/Nightwing', \n        'publisher':'DC Comics', \n        'alter_ego':'Dick Grayson',\n        'first_appearance':'Detective Comics #38',\n        'characters':'Dick Grayson'\n    },\n    {\n        'id': 'dc-blue',\n        'superhero':'Blue Beetle', \n        'publisher':'DC Comics', \n        'alter_ego':'Dan Garret',\n        'first_appearance':'Mystery Men Comics #1',\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\n    },\n    {\n        'id': 'dc-black',\n        'superhero':'Black Canary', \n        'publisher':'DC Comics', \n        'alter_ego':'Dinah Drake',\n        'first_appearance':'Flash Comics #86',\n        'characters':'Dinah Drake, Dinah Lance'\n    },\n    {\n        'id': 'marvel-spider',\n        'superhero':'Spider Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Peter Parker',\n        'first_appearance':'Amazing Fantasy #15',\n        'characters':'Peter Parker'\n    },\n    {\n        'id': 'marvel-captain',\n        'superhero':'Captain America', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Steve Rogers',\n        'first_appearance':'Captain America Comics #1',\n        'characters':'Steve Rogers'\n    },\n    {\n        'id': 'marvel-iron',\n        'superhero':'Iron Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Tony Stark',\n        'first_appearance':'Tales of Suspense #39',\n        'characters':'Tony Stark'\n    },\n    {\n        'id': 'marvel-thor',\n        'superhero':'Thor', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Thor Odinson',\n        'first_appearance':'Journey into Myster #83',\n        'characters':'Thor Odinson'\n    },\n    {\n        'id': 'marvel-hulk',\n        'superhero':'Hulk', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Bruce Banner',\n        'first_appearance':'The Incredible Hulk #1',\n        'characters':'Bruce Banner'\n    },\n    {\n        'id': 'marvel-wolverine',\n        'superhero':'Wolverine', \n        'publisher':'Marvel Comics', \n        'alter_ego':'James Howlett',\n        'first_appearance':'The Incredible Hulk #180',\n        'characters':'James Howlett'\n    },\n    {\n        'id': 'marvel-daredevil',\n        'superhero':'Daredevil', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Matthew Michael Murdock',\n        'first_appearance':'Daredevil #1',\n        'characters':'Matthew Michael Murdock'\n    },\n    {\n        'id': 'marvel-hawkeye',\n        'superhero':'Hawkeye', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Clinton Francis Barton',\n        'first_appearance':'Tales of Suspense #57',\n        'characters':'Clinton Francis Barton'\n    },\n    {\n        'id': 'marvel-cyclops',\n        'superhero':'Cyclops', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Scott Summers',\n        'first_appearance':'X-Men #1',\n        'characters':'Scott Summers'\n    },\n    {\n        'id': 'marvel-silver',\n        'superhero':'Silver Surfer', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Norrin Radd',\n        'first_appearance':'The Fantastic Four #48',\n        'characters':'Norrin Radd'\n    }\n]","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nexport const HeroCard = (heroe) => {\n    const {\n        id,\n        superhero,\n        alter_ego,\n        first_appearance,\n        characters\n    } = heroe;\n    return (\n      <div className=\"card animate__animated animate__fadeIn ms-6\" style={{width:'15rem'}}>\n\n        <div className=\"card-body text-center\">\n          <img className=\"fluid w-100\" src={`../../assets/heroes/${id}.jpg`} alt={superhero} style={{height:350}} />\n          <h5 className=\"card-title text-center mt-3\">{superhero}</h5>\n          <p className=\"card-text text-center\">{alter_ego}</p>\n          { (alter_ego !== characters) && <p className='card-text'>{characters}</p>}\n          <p className='card-text'>\n            <small className='text-muted'>{first_appearance}</small>\n          </p>\n          <Link className='btn btn-primary center-block ' to={`/heroes/${id}`}>Acerca de</Link>\n        </div>\n      </div>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\nimport { HeroCard } from './HeroCard';\n\n\nexport const HeroList = ({publisher}) => {\n    //esta funcion se queda memorizada y solo se disparará en caso de que cambien el publisher\n    const heroes = useMemo(() => getHeroesByPublisher(publisher),[publisher]);\n    return (\n    \n        <div className='d-flex flex-row flex-wrap'>\n            {\n                heroes.map(heroe=>(\n                    <HeroCard key={heroe.id} {...heroe}/>\n                ))\n            }\n        </div>\n\n    )\n}\n","import { heroes } from \"../data/heroes\";\n\nexport const getHeroesByPublisher =(publisher)=>{\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\n\n    if(!(validPublishers.includes(publisher))){\n        throw new Error (`Publisher ${publisher} no es valido`);\n    }\n\n    return heroes.filter(hero => hero.publisher ===publisher);\n}","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\nexport const DcScreen = () => {\n    return (\n        <div>\n            <h1>DC Screen</h1>\n            <hr/>\n            <HeroList publisher={'DC Comics'}/>\n        </div>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { Redirect, useParams } from 'react-router'\nimport { getHeroesById } from '../../selectors/getHeroById';\n\nexport const HeroScreen = ({history}) => {\n    //coustomHook para leer los parametros enviados por url\n    const {heroeId} = useParams();\n    // const hero = getHeroesById(heroeId);\n    const hero = useMemo(() => getHeroesById(heroeId),[heroeId])\n    \n    if(!hero){\n        //redireccionamos en caso de tener un error con la renderizacion\n        return <Redirect to='/'/>\n    }\n\n    const handleClick = ()=>{\n        //history goback() nos sive para regesar a la navegacion anterior. que se encuentra en nuestro historial de navegación\n        (history.length <=2)?history.push('/') : history.goBack();\n\n    }\n    const {\n        id,\n        superhero,\n        publisher,\n        alter_ego,\n        first_appearance,\n        characters\n    } = hero;\n    return (    \n        <div className='row mt-5 animate__animated animate__backInDown'>\n            <div className='col-5'>\n                <img src={`../../assets/heroes/${id}.jpg`} alt={superhero} className='img-thumbnail'/>\n            </div>  \n            <div className='col-6'>\n                <h3>{superhero}</h3>\n                <ul className='list-group list-group-flush' >\n                    <li className='list-group-item'><b>Alter ego: </b>{alter_ego}</li>\n                    <li className='list-group-item'><b>Publisher: </b>{publisher}</li>\n                    <li className='list-group-item'><b>Fist Appearence: </b>{first_appearance}</li>\n                </ul>\n                <div className='mt-4'  >\n                    <h5>Characters</h5>\n                    <p>{characters}</p>\n                    <button className='btn btn-outline-primary' onClick={handleClick}>Regresar</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { heroes } from \"../data/heroes\";\n\nexport const getHeroesById =(id)=>{\n    return heroes.find(hero => hero.id === id);\n}","import React, { useContext } from \"react\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../auth/AuthContext\";\nimport { types } from \"../../types/types\";\n\nexport const Navbar = () => {\n  const {\n    user: { name },\n    dispatch,\n  } = useContext(AuthContext);\n\n  //usaremos el hook de useHistory ya que NavBar al no ser una ruta no comparte el history.\n  const history = useHistory(); //<- hook que nos permite traer el history de un contexto\n  \n  const handleLogout = () => {\n    const action = {\n      type: types.logout,\n    };\n    dispatch(action);\n    console.log(history);\n    history.replace(\"/login\");\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Asociaciones\n      </Link>\n\n      <div className=\"navbar-collapse\">\n        <div className=\"navbar-nav\">\n          <NavLink\n            activeClassName=\"active\"\n            className=\"nav-item nav-link\"\n            exact\n            to=\"/marvel\"\n          >\n            Marvel\n          </NavLink>\n\n          <NavLink\n            activeClassName=\"active\"\n            className=\"nav-item nav-link\"\n            exact\n            to=\"/dc\"\n          >\n            DC\n          </NavLink>\n\n          <NavLink\n            activeClassName=\"active\"\n            className=\"nav-item nav-link\"\n            exact\n            to=\"/search\"\n          >\n            Search\n          </NavLink>\n        </div>\n      </div>\n\n      <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n        <ul className=\"navbar-nav ml-auto\">\n          <span className=\"nav-item nav-link text-info\">{name}</span>\n\n          <button\n            className=\"nav-item nav-link ml-auto btn\"\n            onClick={handleLogout}\n          >\n            Logout\n          </button>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\n\nexport const MarvelScreen = () => {\n    return (\n        <div>\n            <h1>Marvel Screen</h1>\n            <hr/>\n            <HeroList publisher={'Marvel Comics'}/>\n        </div>\n    )\n}\n","import React, { useMemo } from 'react'\n\nimport queryString from 'query-string'; //query string nos sirve para extraer los valores de los queryString.\nimport { useLocation } from 'react-router';\nimport { useForm } from '../../hooks/useForm';\nimport { HeroCard } from '../heroes/HeroCard';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\n\nexport const SearchScreen = ({history}) => {\n    \n    \n    const location = useLocation();//nos trae los parametros de la url.\n    const {q=''} = queryString.parse(location.search); //extrae los valores del query para dejarnos solo la busqueda.\n    \n    //hacemos uso de nuestro coustomHook\n    const [value,handleInputChange] = useForm({\n        searchText:q\n    });\n    \n    const {searchText} = value; //searchText es el valor de la busqueda.\n\n    const heroesFiltered =  useMemo(() => getHeroesByName(q) ,[q]);\n    \n    const handleSearch = (e)=>{\n        e.preventDefault();\n        history.push(`?q=${ searchText }`)\n    }\n\n    return (\n        <>\n            <h1>Searc Screen</h1>   \n            <hr/>\n            <div className='row'>\n                <div className='col-4'>\n                    <h4>Search form</h4>\n                    <hr/>\n                    <form onSubmit={handleSearch}>\n                        <input \n                            type='text'\n                            placeholder='find your hero'\n                            className='form-control'\n                            name='searchText'\n                            value={searchText}\n                            autoComplete='off'\n                            onChange={handleInputChange}\n                        />\n                    <button \n                        type='submit'\n                        className='btn btn-outline-primary m-1 d-block'\n                    > Search...</button>\n                    </form>\n                </div>  \n\n                <div className='col-7'>\n                    <h4>Results</h4>\n                    <hr/>\n                    {(q==='') && <div className='alert alert-info'>\n                        Search a Hero\n                    </div>}\n\n                    {(q!=='' && heroesFiltered.length===0) && <div className='alert alert-danger'>\n                        Theres id not a hero with ${q}\n                    </div>}\n                    <div className='d-flex flex-wrap'>\n                    {\n                        heroesFiltered.map(hero=>(\n                            <HeroCard\n                                key={hero.id}\n                                {...hero}\n                            />)\n                        )\n                    }\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import { useState } from \"react\"\n\nexport const useForm = (initialState = {})=>{\n    const [value , setValue] = useState(initialState);\n    \n    const reset = ()=>{\n        setValue(initialState)\n    }\n    const handleInputChange = ({target})=>{\n        setValue({\n            ...value,\n            [target.name]: target.value\n        });\n    }\n    return [value,handleInputChange,reset];\n}","import { heroes } from \"../data/heroes\"\n\nexport const getHeroesByName = ( name = '' )=>{\n    if(name==='') return [];\n    name = name.toLowerCase();\n    return heroes.filter((heroe)=> heroe.superhero.toLowerCase().includes(name));\n}","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router';\nimport { DcScreen } from '../components/dc/DcScreen';\nimport { HeroScreen } from '../components/heroes/HeroScreen';\nimport {Navbar} from '../components/ui/Nabvar';\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\nimport { SearchScreen } from '../components/search/SearchScreen';\nexport const DashboardRoutes = ({history}) => {\n    return (\n        <>\n            <Navbar history={history}/>\n            <div className='container mt-4 ml-1 mr-1'>\n                <Switch>\n                    <Route exact path='/marvel' component={MarvelScreen}/>\n                    <Route exact path='/heroes/:heroeId' component={HeroScreen}/>\n                    <Route exact path='/dc' component={DcScreen}/>\n                    <Route exact path='/search' component={SearchScreen}/>\n                    \n                    {/* El redirect es una funcio que se dispara siempre y cuando ninguna de las rutas sea correcta */}\n                    <Redirect to='/marvel' /> \n                </Switch>\n            </div>\n        </>\n    )\n}\n","import { useContext } from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { PrivateRoutes } from \"../auth/PrivateRoutes\";\nimport { PublicRoutes } from \"../auth/PublicRoutes\";\nimport { LoginScreen } from \"../components/login/LoginScreen\";\nimport { DashboardRoutes } from \"./DashboardRoutes\";\n\nexport const AppRouter = () => {\n  const {user} = useContext(AuthContext); //<- extraemos el usuario de nuestro contexto.\n  return (\n    <Router>\n      <div>\n        <Switch> {/* Selecciona las rutas en las que se puede navegar */}\n            {/* El componente route se encarga de renderizar el componente especificado en la ruta */}\n            <PublicRoutes exact path='/login' component={LoginScreen} isAutenticated={user.logged}/> \n            <PrivateRoutes path='/' component={DashboardRoutes} isAutenticated={user.logged}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n};","import React, { useEffect, useReducer } from \"react\";\nimport { AuthContext } from \"./auth/AuthContext\";\nimport { authReducer } from \"./auth/authReducer\";\nimport { init } from \"./helpers/functionsHelpers\";\nimport { AppRouter } from \"./routers/AppRoute\";\n\n\n\nexport const HeroApp = () => {\n  const [user, dispatch] = useReducer(authReducer, {}, init);\n\n  useEffect(() => { //<- disparamos el efecto cada que se actualize el usuario.\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  }, [user]);\n\n  return (\n    /* <- Declaranos noestro contexto y nuestro proovedor de contexto asignando globalmente user y el dispatch.*/\n    <AuthContext.Provider value={{ user, dispatch }}> \n      <AppRouter />;\n    </AuthContext.Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroApp } from './HeroApp';\n\nReactDOM.render(\n    <HeroApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}